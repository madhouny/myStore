@using myStore.CODE
@using myStore.ViewModels;
@model myStore.ViewModels.ShopViewModel

@{
    ViewBag.Title = "Index";
    //var defaultImageURL = "/Content/placeholder-image.png";

}

<!-- Page title -->
<div class="page-title parallax parallax1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title">Shop</h1>
                </div><!-- /.page-title-heading -->

            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</div><!-- /.page-title -->

<section class="flat-row main-shop shop-slidebar">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget-search">
                        <form role="search" method="get" class="search-form" action="@Url.Action("Index", "Shop")">
                            <label>
                                <input type="search" class="search-field" placeholder="Search …" value="@Model.SearchTerm" name="searchTerm">
                            </label>
                            <input type="submit" class="search-submit" value="Search">
                        </form>
                    </div><!-- /.widget-search -->
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Sort By
                        </h5>
                        <ul>
                            <li><a data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.Default, categoryID = Model.CategoryID })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Default ? "active" : string.Empty : string.Empty)">Default</a></li>
                            <li><a data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.Popularity, categoryID = Model.CategoryID })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.Popularity ? "active" : string.Empty : string.Empty)">Popularity</a></li>

                            <li><a data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.PriceLowToHigh, categoryID = Model.CategoryID })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceLowToHigh ? "active" : string.Empty : string.Empty)">Price: low to high</a></li>
                            <li><a data-href="@Url.Action("FilterProducts", "Shop", new { sortBy = (int)SortByEnums.PriceHighToLow, categoryID = Model.CategoryID })" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnums.PriceHighToLow ? "active" : string.Empty : string.Empty)">Price: high to low</a></li>
                        </ul>
                    </div><!-- /.widget-sort-by -->


                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                            Featured Categories
                        </h5>
                        <div class="tag-list">
                            @foreach (var category in Model.FeaturedCategories)
                            {
                                <a data-href="@Url.Action("FilterProducts", "Shop", new { categoryID = category.ID, sortBy = Model.SortBy })" class="dataLink @(Model.CategoryID.HasValue && Model.CategoryID.Value == category.ID ? "active" : string.Empty)">@category.Name</a>
                            }


                        </div>
                    </div>
                    <div class="widget widget-price">
                        <h5 class="widget-title">Filter by price</h5>
                        <div class="price-filter">
                            <div id="slide-range"></div>
                            <p class="amount">
                                Price: <input type="text" id="amount" disabled="">
                            </p>
                        </div>
                    </div><!-- /.widget -->
                    <a href="@Url.Action("Index", "Shop")" class="btn btn-danger">Reset Filters</a>
                </div><!-- /.sidebar -->
            </div><!-- /.col-md-3 -->

            <div class="col-md-9">
                <div id="productDiv">
                    @{
                        var filterProductsShopViewModel = new FilterProductsShopViewModel();
                        filterProductsShopViewModel.Products = Model.Products;
                        filterProductsShopViewModel.Pager = Model.Pager;
                        filterProductsShopViewModel.CategoryID = Model.CategoryID;
                        filterProductsShopViewModel.SortBy = Model.SortBy;

                        Html.RenderPartial("FilterProducts", filterProductsShopViewModel);
                    }
                </div>


            </div><!-- /.col-md-9 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->



<script>

    var callTimeOut;

    var priceSlider = $("#slide-range").slider({
        range: true,
        min: 0,
        max: @Model.MaxPrice,
        values: [0, @Model.MaxPrice],
        slide: function (event, ui) {

            var minPrice = ui.values[0];
            var maxPrice = ui.values[1];

            $("#amount").val("$" + minPrice + ".00" + " - " + "$" + maxPrice + ".00");
            clearTimeout(callTimeOut);
            callTimeOut = setTimeout(PriceRangeChange, 1000);
        }
    });

    $(".dataLink").click(function () {
        var url = $(this).attr("data-href");

        if (url != "" || url != undefined) {
            getData(url);
        }
    });


    function getData(dUrl) {
        
        showLoader();
        $.ajax({
            url: dUrl,
            data: {

                minPrice: priceSlider.slider("values", 0),
                maxPrice: priceSlider.slider("values", 1),
            }
        })
            .done(function (response) {

                $("#productDiv").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("fail");
            }).always(function () {
                console.log("always");
                hideLoader();
            });     
    }

    function PriceRangeChange() {
       
         $.ajax({
            url:  '@Url.Action("FilterProducts", "Shop")',
             data: {
                 searchTerm: $("SearchTerm").val(),
                sortBy: $("SortBy").val(),
                categoryID: $("CategoryID").val(),
                 minPrice: priceSlider.slider("values", 0),
                 maxPrice: priceSlider.slider("values", 1),
            }
        })
            .done(function (response) {
                $("#productDiv").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("fail");
            });
    }
</script>
