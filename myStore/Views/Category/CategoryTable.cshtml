@model myStore.ViewModels.CategorySearchViewModel


<div>
    <form method="post">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label>Search</label>
                    <input class="form-control" id="searchTxt" name="Search" value="@Model.SearchTerm" />
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label>Action</label>
                    <div class="row">
                        <div class="col-md-4">
                            <button class="btn btn-primary form-control" type="button" id="searchBtn">Search</button>
                        </div>
                        <div class="col-md-4">
                            <button class="btn btn-primary form-control" type="button" id="resetBtn">Reset</button>
                        </div>
                        <div class="col-md-4">
                            <button class=" btn btn-primary form-control" type="button" id="newBtn">New</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th class="font-weight-bold">Category Name</th>
                <th class="font-weight-bold">Products</th>
                <th class="font-weight-bold wrap-td">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Categories != null && Model.Categories.Count > 0)
            {
                foreach (var category in Model.Categories)
                {
                    <tr>
                        <td>@category.Name</td>
                        <td>
                            @category.Products.Count
                            <br />

                            @*@foreach(var product in category.Products)
                                {
                                    <span>@product.Name</span>
                                }*@
                        </td>
                        <td class="wrap-td">
                            <button class="editBtn" data-id="@category.ID">Edit</button>
                            <button class="deleteBtn" data-id="@category.ID">Delete</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="3" class="text-danger">No Categories found.</td></tr>
            }
        </tbody>
    </table>
    <div>
        @if (Model.Pager != null)
        {
         	if (Model.Pager.CurrentPage > 1)
			{
				<button class="pageButtons" data-pageno="1">First</button>
				<button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage - 1)">Previous</button>
			}

			for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
			{
				string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

				<button class="@activeClass pageButtons" data-pageno="@page">@page</button>
			}

			if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
			{
				<button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage + 1)">Next</button>
				<button class="pageButtons" data-pageno="@Model.Pager.EndPage">Last</button>
			}
        }
    </div>
</div>

<script>

    $(".pageButtons").click(function () {
		$.ajax({
			url: '@Url.Action("CategoryTable", "Category")',
			data: {
				pageNo: $(this).attr("data-pageNo")
			}
		})
        .done(function (response) {
        	$("#tableContiner").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
     });

    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();

        $.ajax({
            url: '@Url.Action("CategoryTable", "Category")',//'/Category/CategoryTable',
            data: {
                search: searchValue
            }
        })
            .done(function (response) {
                $("#tableContiner").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

        $("#resetBtn").click(function () {
        var searchValue = '';

        $.ajax({
            url: '@Url.Action("CategoryTable", "Category")',//'/Category/CategoryTable',
            data: {
                search: searchValue
            }
        })
            .done(function (response) {
                $("#tableContiner").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });


    $("#newBtn").click(function () {

        $.ajax({
            url: '@Url.Action("Create", "Category")'//'/Category/Create',
        })
            .done(function (response) {
                $(".actionContainer").html(response);
                focusAction(".actionContainer");
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });


    $(".editBtn").click(function () {

        $.ajax({

            url: '@Url.Action("Edit", "Category")', //'/Category/Edit',
            data: {
                Id: $(this).attr('data-id')
            }
        })
            .done(function (response) {
                $(".actionContainer").html(response);
                focusAction(".actionContainer");
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("fail");
            });
    });

    $(".deleteBtn").click(function () {
        swal({
            title: "Confirm?",
            text: "Are you sure you want to delete this Category!",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {

                    $.ajax({
                    type: 'POST',
                         url: '@Url.Action("Delete", "Category")',//'/Category/Delete',
                        data: {
                            Id: $(this).attr('data-id')
                        }
                    })
                            .done(function (response) {
                            $("#tableContiner").html(response);

                            swal("Category deleted Successfully.", {
                                icon: "success",
                            });
                        })
                        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("fail");
                        });

                }
            });

    });


</script>

